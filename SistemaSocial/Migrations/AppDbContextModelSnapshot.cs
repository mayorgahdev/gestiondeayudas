// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaSocial.Models;

namespace SistemaSocial.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.HasSequence<int>("GrupoFamiliar");

            modelBuilder.HasSequence<int>("GrupoFamiliarAsignacion");

            modelBuilder.HasSequence<int>("GrupoFamiliarAyuda");

            modelBuilder.HasSequence<int>("GrupoFamiliarCronicos");

            modelBuilder.HasSequence<int>("GrupoFamiliarGastos");

            modelBuilder.HasSequence<int>("GrupoFamiliarHabitacionales");

            modelBuilder.HasSequence<int>("GrupoFamiliarInforme");

            modelBuilder.HasSequence<int>("GrupoFamiliarIngresos");

            modelBuilder.HasSequence<int>("GrupoFamiliarMedioAyuda");

            modelBuilder.HasSequence<int>("GrupoFamiliarPeticionAyuda");

            modelBuilder.HasSequence<int>("GrupoFamiliarSalud");

            modelBuilder.HasSequence<int>("GrupoFamiliarSituacion");

            modelBuilder.HasSequence<int>("GrupoFamiliarSocioeconomico");

            modelBuilder.HasSequence<int>("NumAyuda");

            modelBuilder.HasSequence<int>("NumCuenta");

            modelBuilder.HasSequence<int>("NumMedio");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SistemaSocial.Models.Acreditacion", b =>
                {
                    b.Property<int>("AcreditacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("DiscapacidadID")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AcreditacionID");

                    b.HasIndex("DiscapacidadID");

                    b.ToTable("tblAcreditacion");
                });

            modelBuilder.Entity("SistemaSocial.Models.AreaGestion", b =>
                {
                    b.Property<int>("AreaGestionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AreaGestionID");

                    b.ToTable("tblAreaGestion");
                });

            modelBuilder.Entity("SistemaSocial.Models.AsignacionDeCuenta", b =>
                {
                    b.Property<int>("AsignacionDeCuentaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AreaGestionID")
                        .HasColumnType("int");

                    b.Property<int>("ClientesID")
                        .HasColumnType("int");

                    b.Property<int>("CuentaID")
                        .HasColumnType("int");

                    b.Property<int>("GrupoFamiliar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR GrupoFamiliar");

                    b.Property<int>("NumCuenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR NumCuenta");

                    b.Property<int>("NumInforme")
                        .HasColumnType("int");

                    b.Property<int>("PresEntregado")
                        .HasColumnType("int");

                    b.Property<int>("PresupuestoID")
                        .HasColumnType("int");

                    b.Property<int>("ProgramaID")
                        .HasColumnType("int");

                    b.HasKey("AsignacionDeCuentaID");

                    b.HasIndex("AreaGestionID");

                    b.HasIndex("ClientesID");

                    b.HasIndex("CuentaID");

                    b.HasIndex("PresupuestoID");

                    b.HasIndex("ProgramaID");

                    b.ToTable("tblAsignacion");
                });

            modelBuilder.Entity("SistemaSocial.Models.AyudaSocial", b =>
                {
                    b.Property<int>("AyudaSocialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CantidadEntregada")
                        .HasColumnType("int");

                    b.Property<int>("ClientesID")
                        .HasColumnType("int");

                    b.Property<string>("DetalleRequerimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaElaboracion")
                        .HasColumnType("datetime2");

                    b.Property<int>("GrupoFamiliar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR GrupoFamiliar");

                    b.Property<int>("NumAyuda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR NumAyuda");

                    b.Property<int>("NumInforme")
                        .HasColumnType("int");

                    b.Property<int>("PrestacionesID")
                        .HasColumnType("int");

                    b.Property<string>("StockBodega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoPeticionID")
                        .HasColumnType("int");

                    b.HasKey("AyudaSocialID");

                    b.HasIndex("ClientesID");

                    b.HasIndex("PrestacionesID");

                    b.HasIndex("TipoPeticionID");

                    b.ToTable("tblAyudaSocial");
                });

            modelBuilder.Entity("SistemaSocial.Models.Clientes", b =>
                {
                    b.Property<int>("ClientesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ApellidoMaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<int>("EstadoCivilID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("GrupoFamiliar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR GrupoFamiliar");

                    b.Property<int>("IndiceEscolaridadID")
                        .HasColumnType("int");

                    b.Property<int>("NacionalidadID")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ocupacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentescoID")
                        .HasColumnType("int");

                    b.Property<int>("PrevisionSaludID")
                        .HasColumnType("int");

                    b.Property<int>("PrevisionSocialID")
                        .HasColumnType("int");

                    b.Property<string>("Rut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDeCliente")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientesID");

                    b.HasIndex("EstadoCivilID");

                    b.HasIndex("IndiceEscolaridadID");

                    b.HasIndex("NacionalidadID");

                    b.HasIndex("ParentescoID");

                    b.HasIndex("PrevisionSaludID");

                    b.HasIndex("PrevisionSocialID");

                    b.ToTable("tblClientes");
                });

            modelBuilder.Entity("SistemaSocial.Models.Cronicos", b =>
                {
                    b.Property<int>("CronicosID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("GrupoFamiliar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR GrupoFamiliar");

                    b.Property<int>("NCronicos")
                        .HasColumnType("int");

                    b.Property<int>("NEmbarazadas")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionGrupo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RSHID")
                        .HasColumnType("int");

                    b.Property<int>("TramoID")
                        .HasColumnType("int");

                    b.HasKey("CronicosID");

                    b.HasIndex("RSHID");

                    b.HasIndex("TramoID");

                    b.ToTable("tblCronicos");
                });

            modelBuilder.Entity("SistemaSocial.Models.Cuenta", b =>
                {
                    b.Property<int>("CuentaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProgramaID")
                        .HasColumnType("int");

                    b.HasKey("CuentaID");

                    b.HasIndex("ProgramaID");

                    b.ToTable("tblCuenta");
                });

            modelBuilder.Entity("SistemaSocial.Models.Discapacidad", b =>
                {
                    b.Property<int>("DiscapacidadID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DiscapacidadID");

                    b.ToTable("tblDiscapacidad");
                });

            modelBuilder.Entity("SistemaSocial.Models.EstadoCivil", b =>
                {
                    b.Property<int>("EstadoCivilID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadoCivilID");

                    b.ToTable("tblEstadoCivil");
                });

            modelBuilder.Entity("SistemaSocial.Models.GastosFamiliares", b =>
                {
                    b.Property<int>("GastosFamiliaresID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Alimentacion")
                        .HasColumnType("int");

                    b.Property<int>("Arriendo")
                        .HasColumnType("int");

                    b.Property<int>("Aseo")
                        .HasColumnType("int");

                    b.Property<int>("ClientesID")
                        .HasColumnType("int");

                    b.Property<int>("Combustible")
                        .HasColumnType("int");

                    b.Property<int>("Creditos")
                        .HasColumnType("int");

                    b.Property<int>("Dividendo")
                        .HasColumnType("int");

                    b.Property<int>("Educacion")
                        .HasColumnType("int");

                    b.Property<int>("GastosTelefono")
                        .HasColumnType("int");

                    b.Property<int>("GrupoFamiliar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR GrupoFamiliar");

                    b.Property<int>("Movilizacion")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salud")
                        .HasColumnType("int");

                    b.Property<int>("Servicios")
                        .HasColumnType("int");

                    b.Property<int>("TotalGastosMensuales")
                        .HasColumnType("int");

                    b.Property<int>("Varios")
                        .HasColumnType("int");

                    b.HasKey("GastosFamiliaresID");

                    b.HasIndex("ClientesID");

                    b.ToTable("tblGastosFamiliares");
                });

            modelBuilder.Entity("SistemaSocial.Models.Habitacionales", b =>
                {
                    b.Property<int>("HabitacionalesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Agua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AguaCamion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AguaNoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AguaVertiente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Alcantarillado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientesID")
                        .HasColumnType("int");

                    b.Property<string>("Definir")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fosa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GrupoFamiliar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR GrupoFamiliar");

                    b.Property<string>("Luzirregular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaterialViviendaID")
                        .HasColumnType("int");

                    b.Property<string>("NivelAsinamiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumDormitorios")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Otro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pozo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RedPublica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SinLuz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SituacionCasaID")
                        .HasColumnType("int");

                    b.Property<int>("TenenciaTerrenoID")
                        .HasColumnType("int");

                    b.Property<int>("TipoViviendaID")
                        .HasColumnType("int");

                    b.Property<int>("TotalDependecias")
                        .HasColumnType("int");

                    b.HasKey("HabitacionalesID");

                    b.HasIndex("ClientesID");

                    b.HasIndex("MaterialViviendaID");

                    b.HasIndex("SituacionCasaID");

                    b.HasIndex("TenenciaTerrenoID");

                    b.HasIndex("TipoViviendaID");

                    b.ToTable("tblHabitacionales");
                });

            modelBuilder.Entity("SistemaSocial.Models.IndiceEscolaridad", b =>
                {
                    b.Property<int>("IndiceEscolaridadID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IndiceEscolaridadID");

                    b.ToTable("tblIndiceEscolaridad");
                });

            modelBuilder.Entity("SistemaSocial.Models.InformeSocial", b =>
                {
                    b.Property<int>("InformeSocialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClientesID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaElaboracion")
                        .HasColumnType("datetime2");

                    b.Property<int>("GrupoFamiliar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR GrupoFamiliar");

                    b.Property<int>("NumInforme")
                        .HasColumnType("int");

                    b.Property<string>("Sintesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("InformeSocialID");

                    b.HasIndex("ClientesID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("tblInformeSocial");
                });

            modelBuilder.Entity("SistemaSocial.Models.Ingresos", b =>
                {
                    b.Property<int>("IngresosID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClientesID")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaElaboracion")
                        .HasColumnType("datetime2");

                    b.Property<int>("GrupoFamiliar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR GrupoFamiliar");

                    b.Property<int>("IngresosMensuales")
                        .HasColumnType("int");

                    b.HasKey("IngresosID");

                    b.HasIndex("ClientesID");

                    b.ToTable("tblIngresos");
                });

            modelBuilder.Entity("SistemaSocial.Models.MaterialVivienda", b =>
                {
                    b.Property<int>("MaterialViviendaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaterialViviendaID");

                    b.ToTable("tblMaterialVivienda");
                });

            modelBuilder.Entity("SistemaSocial.Models.MedioAyuda", b =>
                {
                    b.Property<int>("MedioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClientesID")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GrupoFamiliar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR GrupoFamiliar");

                    b.Property<int>("Monto")
                        .HasColumnType("int");

                    b.Property<int>("NumInforme")
                        .HasColumnType("int");

                    b.Property<int>("NumMedio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR NumMedio");

                    b.Property<string>("Orden")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MedioID");

                    b.HasIndex("ClientesID");

                    b.ToTable("tblMedioAyuda");
                });

            modelBuilder.Entity("SistemaSocial.Models.Nacionalidad", b =>
                {
                    b.Property<int>("NacionalidadID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Abreviacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NacionalidadID");

                    b.ToTable("tblNacionalidad");
                });

            modelBuilder.Entity("SistemaSocial.Models.Parentesco", b =>
                {
                    b.Property<int>("ParentescoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParentescoID");

                    b.ToTable("tblParentesco");
                });

            modelBuilder.Entity("SistemaSocial.Models.Peticion", b =>
                {
                    b.Property<int>("PeticionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PeticionID");

                    b.ToTable("tblPeticion");
                });

            modelBuilder.Entity("SistemaSocial.Models.PeticionAyuda", b =>
                {
                    b.Property<int>("PeticionAyudaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClientesID")
                        .HasColumnType("int");

                    b.Property<int>("GrupoFamiliar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR GrupoFamiliar");

                    b.Property<int>("NumInforme")
                        .HasColumnType("int");

                    b.Property<string>("PeticionTexto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PeticionAyudaID");

                    b.HasIndex("ClientesID");

                    b.ToTable("tblPeticionAyuda");
                });

            modelBuilder.Entity("SistemaSocial.Models.Prestaciones", b =>
                {
                    b.Property<int>("PrestacionesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PrestacionesID");

                    b.ToTable("tblPrestaciones");
                });

            modelBuilder.Entity("SistemaSocial.Models.Presupuesto", b =>
                {
                    b.Property<int>("PresupuestoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CuentaID")
                        .HasColumnType("int");

                    b.Property<int>("PresInicial")
                        .HasColumnType("int");

                    b.Property<int>("PresVigente")
                        .HasColumnType("int");

                    b.HasKey("PresupuestoID");

                    b.HasIndex("CuentaID");

                    b.ToTable("tblPresupuesto");
                });

            modelBuilder.Entity("SistemaSocial.Models.PrevisionSalud", b =>
                {
                    b.Property<int>("PrevisionSaludID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PrevisionSaludID");

                    b.ToTable("tblPrevisionSalud");
                });

            modelBuilder.Entity("SistemaSocial.Models.PrevisionSocial", b =>
                {
                    b.Property<int>("PrevisionSocialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PrevisionSocialID");

                    b.ToTable("tblPrevisionSocial");
                });

            modelBuilder.Entity("SistemaSocial.Models.Procedencia", b =>
                {
                    b.Property<int>("ProcedenciaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProcedenciaID");

                    b.ToTable("tblProcedencia");
                });

            modelBuilder.Entity("SistemaSocial.Models.Profesion", b =>
                {
                    b.Property<int>("ProfesionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProfesionID");

                    b.ToTable("tblProfesion");
                });

            modelBuilder.Entity("SistemaSocial.Models.Programa", b =>
                {
                    b.Property<int>("ProgramaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AreaGestionID")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProgramaID");

                    b.HasIndex("AreaGestionID");

                    b.ToTable("tblPrograma");
                });

            modelBuilder.Entity("SistemaSocial.Models.RSH", b =>
                {
                    b.Property<int>("RSHID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RSHID");

                    b.ToTable("tblRSH");
                });

            modelBuilder.Entity("SistemaSocial.Models.Salud", b =>
                {
                    b.Property<int>("SaludID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AcreditacionID")
                        .HasColumnType("int");

                    b.Property<int>("ClientesID")
                        .HasColumnType("int");

                    b.Property<string>("Diagnostico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiscapacidadID")
                        .HasColumnType("int");

                    b.Property<int>("GrupoFamiliar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR GrupoFamiliar");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProcedenciaID")
                        .HasColumnType("int");

                    b.HasKey("SaludID");

                    b.HasIndex("AcreditacionID");

                    b.HasIndex("ClientesID");

                    b.HasIndex("DiscapacidadID");

                    b.HasIndex("ProcedenciaID");

                    b.ToTable("tblSalud");
                });

            modelBuilder.Entity("SistemaSocial.Models.Situacion", b =>
                {
                    b.Property<int>("SituacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClientesID")
                        .HasColumnType("int");

                    b.Property<int>("GrupoFamiliar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR GrupoFamiliar");

                    b.Property<string>("SituacionActual")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SituacionID");

                    b.HasIndex("ClientesID");

                    b.ToTable("tblSituacionActual");
                });

            modelBuilder.Entity("SistemaSocial.Models.SituacionCasa", b =>
                {
                    b.Property<int>("SituacionCasaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SituacionCasaID");

                    b.ToTable("tblSituacionCasa");
                });

            modelBuilder.Entity("SistemaSocial.Models.Socioeconomico", b =>
                {
                    b.Property<int>("SocioeconomicoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Actividad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientesID")
                        .HasColumnType("int");

                    b.Property<int>("GrupoFamiliar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR GrupoFamiliar");

                    b.Property<int>("IngresoActividad")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OtrosIngresos1")
                        .HasColumnType("int");

                    b.Property<int>("OtrosIngresos2")
                        .HasColumnType("int");

                    b.Property<int>("OtrosIngresos3")
                        .HasColumnType("int");

                    b.Property<int>("OtrosIngresos4")
                        .HasColumnType("int");

                    b.Property<string>("TipoIngreso1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoIngreso2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoPensionID")
                        .HasColumnType("int");

                    b.Property<int>("TipoSubsidioID")
                        .HasColumnType("int");

                    b.Property<int>("TotalIngresos")
                        .HasColumnType("int");

                    b.HasKey("SocioeconomicoID");

                    b.HasIndex("ClientesID");

                    b.HasIndex("TipoPensionID");

                    b.HasIndex("TipoSubsidioID");

                    b.ToTable("tblSocioeconomico");
                });

            modelBuilder.Entity("SistemaSocial.Models.TenenciaTerreno", b =>
                {
                    b.Property<int>("TenenciaTerrenoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TenenciaTerrenoID");

                    b.ToTable("tblTenenciaTerreno");
                });

            modelBuilder.Entity("SistemaSocial.Models.TipoPension", b =>
                {
                    b.Property<int>("TipoPensionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoPensionID");

                    b.ToTable("tblTipoPension");
                });

            modelBuilder.Entity("SistemaSocial.Models.TipoPeticion", b =>
                {
                    b.Property<int>("TipoPeticionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoPeticionID");

                    b.ToTable("tblTipoPeticion");
                });

            modelBuilder.Entity("SistemaSocial.Models.TipoSubsidio", b =>
                {
                    b.Property<int>("TipoSubsidioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoSubsidioID");

                    b.ToTable("tblTipoSubsidio");
                });

            modelBuilder.Entity("SistemaSocial.Models.TipoUsuario", b =>
                {
                    b.Property<int>("TipoUsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoUsuarioID");

                    b.ToTable("tblTipoUsuario");
                });

            modelBuilder.Entity("SistemaSocial.Models.TipoVivienda", b =>
                {
                    b.Property<int>("TipoViviendaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoViviendaID");

                    b.ToTable("tblTipoVivienda");
                });

            modelBuilder.Entity("SistemaSocial.Models.Tramo", b =>
                {
                    b.Property<int>("TramoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RSHID")
                        .HasColumnType("int");

                    b.HasKey("TramoID");

                    b.HasIndex("RSHID");

                    b.ToTable("tblTramo");
                });

            modelBuilder.Entity("SistemaSocial.Models.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Firma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("ProfesionID")
                        .HasColumnType("int");

                    b.Property<string>("Rut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoUsuarioID")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("ProfesionID");

                    b.HasIndex("TipoUsuarioID");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SistemaSocial.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SistemaSocial.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaSocial.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SistemaSocial.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SistemaSocial.Models.Acreditacion", b =>
                {
                    b.HasOne("SistemaSocial.Models.Discapacidad", "Discapacidad")
                        .WithMany()
                        .HasForeignKey("DiscapacidadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discapacidad");
                });

            modelBuilder.Entity("SistemaSocial.Models.AsignacionDeCuenta", b =>
                {
                    b.HasOne("SistemaSocial.Models.AreaGestion", "AreaGestion")
                        .WithMany()
                        .HasForeignKey("AreaGestionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaSocial.Models.Clientes", "Clientes")
                        .WithMany()
                        .HasForeignKey("ClientesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaSocial.Models.Cuenta", "Cuenta")
                        .WithMany()
                        .HasForeignKey("CuentaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaSocial.Models.Presupuesto", "Presupuesto")
                        .WithMany()
                        .HasForeignKey("PresupuestoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaSocial.Models.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("ProgramaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AreaGestion");

                    b.Navigation("Clientes");

                    b.Navigation("Cuenta");

                    b.Navigation("Presupuesto");

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("SistemaSocial.Models.AyudaSocial", b =>
                {
                    b.HasOne("SistemaSocial.Models.Clientes", "Clientes")
                        .WithMany()
                        .HasForeignKey("ClientesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaSocial.Models.Prestaciones", "Prestaciones")
                        .WithMany()
                        .HasForeignKey("PrestacionesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaSocial.Models.TipoPeticion", "TipoPeticion")
                        .WithMany()
                        .HasForeignKey("TipoPeticionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clientes");

                    b.Navigation("Prestaciones");

                    b.Navigation("TipoPeticion");
                });

            modelBuilder.Entity("SistemaSocial.Models.Clientes", b =>
                {
                    b.HasOne("SistemaSocial.Models.EstadoCivil", "EstadoCivil")
                        .WithMany()
                        .HasForeignKey("EstadoCivilID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaSocial.Models.IndiceEscolaridad", "IndiceEscolaridad")
                        .WithMany()
                        .HasForeignKey("IndiceEscolaridadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaSocial.Models.Nacionalidad", "Nacionalidad")
                        .WithMany()
                        .HasForeignKey("NacionalidadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaSocial.Models.Parentesco", "Parentesco")
                        .WithMany()
                        .HasForeignKey("ParentescoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaSocial.Models.PrevisionSalud", "PrevisionSalud")
                        .WithMany()
                        .HasForeignKey("PrevisionSaludID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaSocial.Models.PrevisionSocial", "PrevisionSocial")
                        .WithMany()
                        .HasForeignKey("PrevisionSocialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoCivil");

                    b.Navigation("IndiceEscolaridad");

                    b.Navigation("Nacionalidad");

                    b.Navigation("Parentesco");

                    b.Navigation("PrevisionSalud");

                    b.Navigation("PrevisionSocial");
                });

            modelBuilder.Entity("SistemaSocial.Models.Cronicos", b =>
                {
                    b.HasOne("SistemaSocial.Models.RSH", "RSH")
                        .WithMany()
                        .HasForeignKey("RSHID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaSocial.Models.Tramo", "Tramo")
                        .WithMany()
                        .HasForeignKey("TramoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RSH");

                    b.Navigation("Tramo");
                });

            modelBuilder.Entity("SistemaSocial.Models.Cuenta", b =>
                {
                    b.HasOne("SistemaSocial.Models.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("ProgramaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("SistemaSocial.Models.GastosFamiliares", b =>
                {
                    b.HasOne("SistemaSocial.Models.Clientes", "Clientes")
                        .WithMany()
                        .HasForeignKey("ClientesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("SistemaSocial.Models.Habitacionales", b =>
                {
                    b.HasOne("SistemaSocial.Models.Clientes", "Clientes")
                        .WithMany()
                        .HasForeignKey("ClientesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaSocial.Models.MaterialVivienda", "MaterialVivienda")
                        .WithMany()
                        .HasForeignKey("MaterialViviendaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaSocial.Models.SituacionCasa", "SituacionCasa")
                        .WithMany()
                        .HasForeignKey("SituacionCasaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaSocial.Models.TenenciaTerreno", "TenenciaTerreno")
                        .WithMany()
                        .HasForeignKey("TenenciaTerrenoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaSocial.Models.TipoVivienda", "TipoVivienda")
                        .WithMany()
                        .HasForeignKey("TipoViviendaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clientes");

                    b.Navigation("MaterialVivienda");

                    b.Navigation("SituacionCasa");

                    b.Navigation("TenenciaTerreno");

                    b.Navigation("TipoVivienda");
                });

            modelBuilder.Entity("SistemaSocial.Models.InformeSocial", b =>
                {
                    b.HasOne("SistemaSocial.Models.Clientes", "Clientes")
                        .WithMany()
                        .HasForeignKey("ClientesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaSocial.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID");

                    b.Navigation("Clientes");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaSocial.Models.Ingresos", b =>
                {
                    b.HasOne("SistemaSocial.Models.Clientes", "Clientes")
                        .WithMany()
                        .HasForeignKey("ClientesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("SistemaSocial.Models.MedioAyuda", b =>
                {
                    b.HasOne("SistemaSocial.Models.Clientes", "Clientes")
                        .WithMany()
                        .HasForeignKey("ClientesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("SistemaSocial.Models.PeticionAyuda", b =>
                {
                    b.HasOne("SistemaSocial.Models.Clientes", "Clientes")
                        .WithMany()
                        .HasForeignKey("ClientesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("SistemaSocial.Models.Presupuesto", b =>
                {
                    b.HasOne("SistemaSocial.Models.Cuenta", "Cuenta")
                        .WithMany()
                        .HasForeignKey("CuentaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cuenta");
                });

            modelBuilder.Entity("SistemaSocial.Models.Programa", b =>
                {
                    b.HasOne("SistemaSocial.Models.AreaGestion", "AreaGestion")
                        .WithMany()
                        .HasForeignKey("AreaGestionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AreaGestion");
                });

            modelBuilder.Entity("SistemaSocial.Models.Salud", b =>
                {
                    b.HasOne("SistemaSocial.Models.Acreditacion", "Acreditacion")
                        .WithMany()
                        .HasForeignKey("AcreditacionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaSocial.Models.Clientes", "Clientes")
                        .WithMany()
                        .HasForeignKey("ClientesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaSocial.Models.Discapacidad", "Discapacidad")
                        .WithMany()
                        .HasForeignKey("DiscapacidadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaSocial.Models.Procedencia", "Procedencia")
                        .WithMany()
                        .HasForeignKey("ProcedenciaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acreditacion");

                    b.Navigation("Clientes");

                    b.Navigation("Discapacidad");

                    b.Navigation("Procedencia");
                });

            modelBuilder.Entity("SistemaSocial.Models.Situacion", b =>
                {
                    b.HasOne("SistemaSocial.Models.Clientes", "Clientes")
                        .WithMany()
                        .HasForeignKey("ClientesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("SistemaSocial.Models.Socioeconomico", b =>
                {
                    b.HasOne("SistemaSocial.Models.Clientes", "Clientes")
                        .WithMany()
                        .HasForeignKey("ClientesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaSocial.Models.TipoPension", "TipoPension")
                        .WithMany()
                        .HasForeignKey("TipoPensionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaSocial.Models.TipoSubsidio", "TipoSubsidio")
                        .WithMany()
                        .HasForeignKey("TipoSubsidioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clientes");

                    b.Navigation("TipoPension");

                    b.Navigation("TipoSubsidio");
                });

            modelBuilder.Entity("SistemaSocial.Models.Tramo", b =>
                {
                    b.HasOne("SistemaSocial.Models.RSH", "RSH")
                        .WithMany()
                        .HasForeignKey("RSHID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RSH");
                });

            modelBuilder.Entity("SistemaSocial.Models.Usuario", b =>
                {
                    b.HasOne("SistemaSocial.Models.Profesion", "Profesion")
                        .WithMany()
                        .HasForeignKey("ProfesionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaSocial.Models.TipoUsuario", "TipoUsuario")
                        .WithMany()
                        .HasForeignKey("TipoUsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profesion");

                    b.Navigation("TipoUsuario");
                });
#pragma warning restore 612, 618
        }
    }
}
